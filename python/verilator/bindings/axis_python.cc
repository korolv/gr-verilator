/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(axis.h)                                                    */
/* BINDTOOL_HEADER_FILE_HASH(1cb0277b74c296ef15295e2d7092f524)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/verilator/axis.h>
// pydoc.h is automatically generated in the build directory
#include <axis_pydoc.h>

template <typename T>
void bind_axis_template(py::module& m, const char* classname)
{
    using axis = gr::verilator::axis<T>;

    py::class_<axis,
               gr::block,
               gr::basic_block,
               std::shared_ptr<axis> >(m, classname, D(axis))

        .def(py::init(&gr::verilator::axis<T>::make),
           D(axis,make));
}

void bind_axis(py::module& m)
{

    bind_axis_template<std::int32_t>(m, "axis_ii");
    bind_axis_template<std::complex<std::int16_t> >(m, "axis_sc16");
}
